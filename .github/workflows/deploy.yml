name: deploy

# 구독할 이벤트
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# jobs 단위로 개별 서버(정확히는 Docker 컨테이너 단위라고 한다.)에서 작업이 수행된다.
jobs:
  build-and-deploy:
    # Ubuntu, Windows, MacOS를 지원한다.
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        node-version: [18.12.0]

    # uses 개념은 다른 사람이 작성한 내용을 실행하는 개념이다.
    # run 개념은 명령어를 실행한다. 셸 스크립트와 동일하다.
    steps:
      - name: ✅ 소스코드 Checkout.
        uses: actions/checkout@v3
        # actions/checkout: GitHub의 마지막 커밋으로 Checkout 한다.

      - name: ⚙️ ${{ matrix.node-version }} 버전의 노드로 세팅
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        # actions/setup-node: Node.js를 설치한다.

      - name: ⚙️ 환경변수 파일 설정
        working-directory: ./
        run: |
          pwd
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          cat .env
        # 깃헙의 레포 > Settings > Security > Secrets > Actions에 환경 변수를 미리 등록하자.

      - name: ✨ 패키지 설치
        working-directory: ./
        run: npm install
        
      - name: ✨ Test 진행
        run: npm test
        # package.json에 정의된 script중 test를 이용하여 테스트 코드를 실행
        
      - name: ✨ 빌드 과정 시작
        working-directory: ./
        run: npm run build --if-present
        # --if-present 옵션은 npm 스크립트가 존재할 때만 실행시키라는 의미이다.
        # 만약 build 스크립트가 없는 경우, 오류 없이 지나간다.
      
      - name: 📦 빌드한 코드를 압축
        run: zip -r project.zip ./src ./scripts ./appspec.yml ./.env ./package.json
        
      - name: 🌎 AWS에 접속
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      
      - name: 🦖 S3에 압축된 서버 코드를 업로드
        run: aws s3 cp --region ap-northeast-2 ./project.zip s3://nodejs-cicd-deploy-bucket/deploy/
  
      - name: 🚀 AWS codeDeploy로 배포를 시작
        run: aws deploy create-deployment
          --application-name nodejs-codedeploy
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name dev
          --s3-location bucket=nodejs-cicd-deploy-bucket,bundleType=zip,key=deploy/project.zip
  